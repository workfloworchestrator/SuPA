[metadata]
name = SuPA
version = file: VERSION.txt
license = Apache-2.0
author = Guido Kollerie
author_email = guido@kollerie.com
description = SURF ultimate Provide Agent
long_description = file: README.rst
long_description_content_type = text/x-rst
keywords =
    NSI
    uPA
    NSA
    gRPC
    protobuf
url= https://git.ia.surfsara.nl/automation/projects/supa/
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Telecommunications Industry
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3.8
    Topic :: System :: Networking

[options]
packages = find:
package_dir = = src
include_package_data = true
python_requires = >= 3.8.3
install_requires =
  grpcio ~= 1.64.0  # version number should match that of `grpcio-tools` in `pyproject.toml`
  grpcio-tools ~= 1.64.0  # version number should match that of `grpcio-tools` in `pyproject.toml`
  mypy-protobuf ~= 3.6.0
  structlog ~= 24.2.0
  colorama ~= 0.4.3
  click ~= 8.0
  pydantic[dotenv] ~= 1.6
  python-statemachine ~= 0.8.0
  sqlalchemy ~= 2.0.30
  apscheduler ~= 3.10.4
  tabulate ~= 0.9.0
  more-itertools ~= 10.2.0
  protobuf ~= 5.26.1
  requests ~= 2.0
  lxml ~= 5.2.1
  lxml-stubs ~= 0.5.0
  cherrypy ~= 18.0
  htmlgen ~= 2.0.0
  paramiko >=3.0.0

[options.extras_require]
dev =
    bandit <= 1.7.2
    black
    flake8 < 5.0.0 # Due to https://github.com/tylerwince/flake8-bandit/issues/33
    flake8-bandit  # security checks
    flake8-bugbear  # assorted opinionated checks
    flake8-builtins  # check for name collision with builtins
    flake8-comprehensions
    flake8-docstrings
    flake8-implicit-str-concat
    flake8-print
    flake8-rst  # Allows run flake8 on code snippets in docstrings or rst files
    flake8-string-format
    grpcio-tools ~= 1.64.0  # version number should match that of `grpcio-tools` in `pyproject.toml`
    grpc-stubs >= 1.53.0
    pytest-grpc
    isort
    mypy >= 0.930, <= 1.0.1
    protobuf >= 3.19.1
    types-pytz
    types-tabulate
    pip-tools
    pre-commit
    pytest
    pytest-cov
    pytest-xdist
    types-requests
    types-setuptools
    types-paramiko >=3.0.0
doc =
    sphinx
    sphinx-rtd-theme
    sphinx-click

[options.packages.find]
where = src

[options.data_files]
etc/supa/ = supa.env

[options.entry_points]
console_scripts =
    supa = supa.main:cli

[build_sphinx]
version = file: VERSION.txt
source-dir = docs

[tool:pytest]
testpaths = tests
filterwarnings=
    ignore::DeprecationWarning:tabulate

[coverage:run]
branch = True
source =
    src/supa
omit =
    src/supa/grpc_nsi/*

[flake8]
# A = builtins
# B = bugbear
# C = comprehensions
# D = docstrings
# E = pycodestyle errors, rst
# F = flake8 pyflakes, rst
# G = logging-format
# P = str-format
# RST = rst-docstrings
# S = bandit
# T = print
# W = pycodestyle warnings
# B9 = bugbear opinions
# ISC = implicit-str-concat
max-line-length = 120
select = A, B, C, D, E, F, G, P, RST, S, T, W, B9, ISC
doctests = True
ignore =
    D100  # Missing docstring in public module
    D104  # Missing docstring in public package
    D301  # Use r""" if any backslashes in a docstring
    S101  # Use of assert detected
    W503  # line break before binary operator
    S311  # Standard pseudo-random generators are not suitable for security/cryptographic purposes.
exclude =
    .git
    .cache
    .eggs
    __pycache__
    docs
    build
    dist
    .venv
    venv
    src/supa/grpc_nsi

[mypy]
ignore_missing_imports = True
disallow_untyped_calls = False
disallow_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = False
warn_unused_ignores = True
warn_return_any = True
warn_unreachable = True
strict_equality = True
show_error_codes = True
show_column_numbers = True

[mypy-supa.grpc_nsi.*]
disallow_untyped_defs = False
disallow_incomplete_defs = False
disallow_untyped_decorators = False
