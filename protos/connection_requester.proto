syntax = "proto3";

package connection.requester;

import "google/protobuf/timestamp.proto";
import "connection_common.proto";

option java_multiple_files = true;
option java_package = "org.ogf.nsi.grpc.connection.requester";
import "services.proto";

message ChildSummary {
  int32 order = 1;
  string connection_id = 2;
  string provider_nsa = 3;
  string service_type = 4;
}

message QuerySummaryResultCriteria {
  int32 version = 1;
  common.Schedule schedule = 2;
  string service_type = 3;
  repeated ChildSummary child = 4;
  oneof service_specific_messages {
    services.PointToPointService ptps = 5;
  }
}

/*
  QuerySummaryResult uses ReservationConfirmCriteria instead of the above QuerySummaryResultCriteria
  message that also has room for children, this because SuPA is an uPA and therefor will never have
  child reservations.
 */
message QuerySummaryResult {
  string connection_id = 1;
  string global_reservation_id = 2;
  string description = 3;
  repeated QuerySummaryResultCriteria criteria = 4;
  string requester_nsa = 5;
  common.ConnectionStates connection_states = 6;
  int64 notification_id = 7;
  int64 result_id = 8;
}

/*
  SOAP's version of ReserveFailed is an alias of GenericFailedType. Unfortunately protobuf does not
  allows aliases for messages that are structurally the same. Hence we define each of the *Failed messages
  explicitely.
 */
message ReserveFailedRequest {
  common.Header header = 1;
  string connection_id = 2;
  common.ConnectionStates connection_states = 3;
  common.ServiceException service_exception = 4;
}

message ReserveFailedResponse {
  common.Header header = 1;
}

message ReservationConfirmCriteria {
  int32 version = 1;
  common.Schedule schedule = 2;
  string serviceType = 3;
  oneof service_specific_messages {
    services.PointToPointService ptps = 4;
  }
}

message ReserveConfirmedRequest {
  common.Header header = 1;
  string connection_id = 2;
  string global_reservation_id = 3;  // UUID
  string description = 4;
  ReservationConfirmCriteria criteria = 5;
}

message ReserveConfirmedResponse {
  common.Header header = 1;
}

message ReserveCommitConfirmedRequest {
  common.Header header = 1;
  string connection_id = 2; // URI
}

message ReserveCommitConfirmedResponse {
  common.Header header = 1;
}

message ReserveCommitFailedRequest {
  common.Header header = 1;
  string connection_id = 2; // URI
  common.ConnectionStates connection_states = 3;
  common.ServiceException service_exception = 4;
}

message ReserveCommitFailedResponse {
  common.Header header = 1;
}

message ReserveAbortConfirmedRequest {
  common.Header header = 1;
  string connection_id = 2; // URI
}

message ReserveAbortConfirmedResponse {
  common.Header header = 1;
}

message ProvisionConfirmedRequest {
  common.Header header = 1;
  string connection_id = 2; // URI
}

message ProvisionConfirmedResponse {
  common.Header header = 1;
}

message ReleaseConfirmedRequest {
  common.Header header = 1;
  string connection_id = 2; // URI
}

message ReleaseConfirmedResponse {
  common.Header header = 1;
}

message TerminateConfirmedRequest {
  common.Header header = 1;
  string connection_id = 2; // URI
}

message TerminateConfirmedResponse {
  common.Header header = 1;
}

message ErrorRequest {
  common.Header header = 1;
  common.ServiceException service_exception = 2;
}

message ErrorResponse {
  common.Header header = 1;
}

message DataPlaneStateChangeRequest {
  common.Header header = 1;
  common.Notification notification = 2;
  common.DataPlaneStatus data_plane_status = 3;
}

message DataPlaneStateChangeResponse {
  common.Header header = 1;
}

message ReserveTimeoutRequest {
  common.Header header = 1;
  common.Notification notification = 2;
  int32 timeout_value = 3;
  string originating_connection_id = 4;
  string originating_nsa = 5;
}

message ReserveTimeoutResponse {
  common.Header header = 1;
}

message QuerySummaryConfirmedRequest {
  common.Header header = 1;
  repeated QuerySummaryResult reservation = 2;
  google.protobuf.Timestamp last_modified = 3;
}

message QuerySummaryConfirmedResponse {
  common.Header header = 1;
}

service ConnectionRequester {
  rpc ReserveFailed(ReserveFailedRequest) returns (ReserveFailedResponse);
  rpc ReserveConfirmed(ReserveConfirmedRequest) returns (ReserveConfirmedResponse);
  rpc ReserveCommitConfirmed(ReserveCommitConfirmedRequest) returns (ReserveCommitConfirmedResponse);
  rpc ReserveCommitFailed(ReserveCommitFailedRequest) returns (ReserveCommitFailedResponse);
  rpc ReserveAbortConfirmed(ReserveAbortConfirmedRequest) returns (ReserveAbortConfirmedResponse);
  rpc ProvisionConfirmed(ProvisionConfirmedRequest) returns (ProvisionConfirmedResponse);
  rpc ReleaseConfirmed(ReleaseConfirmedRequest) returns (ReleaseConfirmedResponse);
  rpc TerminateConfirmed(TerminateConfirmedRequest) returns (TerminateConfirmedResponse);
  rpc Error(ErrorRequest) returns (ErrorResponse);
  rpc DataPlaneStateChange(DataPlaneStateChangeRequest) returns (DataPlaneStateChangeResponse);
  rpc ReserveTimeout(ReserveTimeoutRequest) returns (ReserveTimeoutResponse);
  rpc QuerySummaryConfirmed(QuerySummaryConfirmedRequest) returns (QuerySummaryConfirmedResponse);
}
