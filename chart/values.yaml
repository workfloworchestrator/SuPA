# Default values for SuPA.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/workfloworchestrator/supa
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# optional configmap with environment variables mounted into the pod
#env:
#  TOPOLOGY: development

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 80  # supa:80 mapped to document_server_port (default 8080)
  grpc: 80  # supa-grpc:80 mapped to grpc_server_insecure_port (default 50051)

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
   limits:
     cpu: 1000m
     memory: 128Mi
   requests:
     cpu: 10m
     memory: 64Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  mountPath: /usr/local/var/db
  subPath:
  annotations: {}
  accessModes:
    - ReadWriteOnce
  size: 1Gi

secretProviderClass:
  enabled: true
  provider: azure
  name: "surf-dev-kv"
  keyVaultName: "surf-dev-kv"
  tenantId: "0cd9bc36-9c09-4562-8d35-e911c1f68a7a"
  nodePublishSecretRefNname: "kv-sp-secret"
  env:
    #- name: "PGHOST"
    #  value: "surf-orchestration-dev-pgsql2.postgres.database.azure.com"
    #- name: "PGPORT"
    #  value: 5432
  objects:
    - key: "OIDC_PASSWORD"
      objectName: "supa-dev-oidc-basic-auth"

config:
  # either read config files from folder or use inline data, filesGlob takes precedence over inline.
  #filesGlob: "config/*"
  inline: |-
    supa.env: |-
      document_server_host=0.0.0.0
      document_server_port=8080
      grpc_server_insecure_host=0.0.0.0
      grpc_server_insecure_port=50051
      grpc_client_insecure_host=polynsi-grpc.nsi.svc.cluster.local
      grpc_client_insecure_port=80
      topology=topology
      domain=example.domain:2001
      log_level=INFO
      backend=surf
    surf.env: |-
      base_url=http://development-orchestrator.development.svc.cluster.local:80
      oauth2_active=True
      oidc_url=https://sso.dev.example.domain/realms/development/protocol/openid-connect/token
      oidc_user=supa-oidc-user
      oidc_password=kFh9setPa8syRMZoWQIw5Bl4IUDPDXtTuCkdRA3evakt
      create_workflow_name=create_nsi_light_path
      terminate_workflow_name=terminate_nsi_light_path
      customer_id=1a6f361b-2d8b-48a8-bbcc-74e4bcff6c21
      product_id=6ef76caa-5564-4740-9c83-c0e6d09176c4
