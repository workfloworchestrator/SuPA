apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "SuPA.fullname" . }}
  labels:
    {{- include "SuPA.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Chart.Name }}
  selector:
    matchLabels:
      {{- include "SuPA.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "SuPA.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "SuPA.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "supa"
          args:
            - "serve"
          {{- if .Values.env }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-environment
          {{- end }}
          ports:
            - name: http-alt
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http-alt
            initialDelaySeconds: 3
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http-alt
            initialDelaySeconds: 3
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
              subPath: {{ .Values.persistence.subPath }}
          {{- end }}
            - name: config
              mountPath: "/usr/local/etc/supa"
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ printf "%s-config" (include "SuPA.fullname" .) }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
{{- end }}
